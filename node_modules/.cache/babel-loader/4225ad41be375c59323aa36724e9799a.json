{"ast":null,"code":"var _jsxFileName = \"/home/santiago/Trybe/myprojects/sd-09-project-trivia-react-redux/src/pages/login.js\";\nimport React from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport logo from '../trivia.png';\nimport { getToken, setNameAndEmail } from '../redux/actions';\n\nclass loginScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      login: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleValidateEmail = this.handleValidateEmail.bind(this);\n  }\n\n  setupButton() {\n    return React.createElement(\"button\", {\n      \"data-testid\": \"btn-settings\",\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/settings\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \" Settings \"));\n  }\n\n  handleChange({\n    target: {\n      name,\n      value\n    }\n  }) {\n    this.setState({\n      [name]: value\n    });\n  }\n\n  async handleClick() {\n    const _this$props = this.props,\n          propGetToken = _this$props.propGetToken,\n          propSetNameAndEmail = _this$props.propSetNameAndEmail;\n    const _this$state = this.state,\n          name = _this$state.name,\n          email = _this$state.email;\n    await propGetToken();\n    await propSetNameAndEmail(name, email);\n    this.setState({\n      login: true\n    });\n  }\n\n  handleValidateEmail() {\n    const email = this.state.email;\n    return /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$/.test(email);\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          name = _this$state2.name,\n          email = _this$state2.email,\n          login = _this$state2.login;\n    if (login) return React.createElement(Redirect, {\n      to: \"/trivia\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    });\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      \"data-testid\": \"input-player-name\",\n      name: \"name\",\n      type: \"text\",\n      value: name,\n      placeholder: \"Nome:\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      \"data-testid\": \"input-gravatar-email\",\n      name: \"email\",\n      type: \"email\",\n      value: email,\n      placeholder: \"Email:\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      \"data-testid\": \"btn-play\",\n      type: \"button\",\n      onClick: this.handleClick,\n      disabled: !(this.handleValidateEmail() && name),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Jogar\"), this.setupButton());\n  }\n\n}\n\nloginScreen.propTypes = {\n  propGetToken: PropTypes.func,\n  propSetNameAndImail: PropTypes.func\n}.isRequired;\n\nconst mapStateToProps = ({\n  actionsReducer\n}) => ({\n  actionsReducer\n});\n\nconst mapDispatchToProps = dispatch => ({\n  propGetToken: () => dispatch(getToken()),\n  propSetNameAndEmail: (name, email) => dispatch(setNameAndEmail(name, email))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(loginScreen);","map":{"version":3,"sources":["/home/santiago/Trybe/myprojects/sd-09-project-trivia-react-redux/src/pages/login.js"],"names":["React","Redirect","Link","connect","PropTypes","logo","getToken","setNameAndEmail","loginScreen","Component","constructor","props","state","name","email","login","handleChange","bind","handleClick","handleValidateEmail","setupButton","target","value","setState","propGetToken","propSetNameAndEmail","test","render","propTypes","func","propSetNameAndImail","isRequired","mapStateToProps","actionsReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport logo from '../trivia.png';\nimport { getToken, setNameAndEmail } from '../redux/actions';\n\nclass loginScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      login: false,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleValidateEmail = this.handleValidateEmail.bind(this);\n  }\n\n  setupButton() {\n    return (\n      <button\n        data-testid=\"btn-settings\"\n        type=\"button\"\n      >\n        <Link to=\"/settings\"> Settings </Link>\n      </button>\n    );\n  }\n\n  handleChange({ target: { name, value } }) {\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  async handleClick() {\n    const { propGetToken, propSetNameAndEmail } = this.props;\n    const { name, email } = this.state;\n    await propGetToken();\n    await propSetNameAndEmail(name, email);\n    this.setState({\n      login: true,\n    });\n  }\n\n  handleValidateEmail() {\n    const { email } = this.state;\n    return (/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$/.test(email));\n  }\n\n  render() {\n    const { name, email, login } = this.state;\n    if (login) return <Redirect to=\"/trivia\" />;\n    return (\n      <div className=\"App\">\n        <div>\n          <header className=\"App-header\">\n            <img src={ logo } className=\"App-logo\" alt=\"logo\" />\n          </header>\n        </div>\n        <p>Login</p>\n        <div>\n          <input\n            data-testid=\"input-player-name\"\n            name=\"name\"\n            type=\"text\"\n            value={ name }\n            placeholder=\"Nome:\"\n            onChange={ this.handleChange }\n          />\n          <input\n            data-testid=\"input-gravatar-email\"\n            name=\"email\"\n            type=\"email\"\n            value={ email }\n            placeholder=\"Email:\"\n            onChange={ this.handleChange }\n          />\n        </div>\n        <br />\n        <button\n          data-testid=\"btn-play\"\n          type=\"button\"\n          onClick={ this.handleClick }\n          disabled={ !(this.handleValidateEmail() && name) }\n        >\n          Jogar\n        </button>\n        { this.setupButton() }\n      </div>\n    );\n  }\n}\n\nloginScreen.propTypes = {\n  propGetToken: PropTypes.func,\n  propSetNameAndImail: PropTypes.func,\n}.isRequired;\n\nconst mapStateToProps = ({ actionsReducer }) => ({\n  actionsReducer,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  propGetToken: () => dispatch(getToken()),\n  propSetNameAndEmail: (name, email) => dispatch(setNameAndEmail(name, email)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(loginScreen);\n"]},"metadata":{},"sourceType":"module"}