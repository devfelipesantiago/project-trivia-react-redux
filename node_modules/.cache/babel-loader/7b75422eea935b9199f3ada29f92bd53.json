{"ast":null,"code":"var _jsxFileName = \"/home/santiago/Trybe/myprojects/sd-09-project-trivia-react-redux/src/components/question.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { PropTypes } from 'prop-types';\nimport { setNext, setSelectedAnswer } from '../redux/actions';\nimport '../css/questions.css';\n\nclass Question extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  async handleClick(e) {\n    const _this$props = this.props,\n          propSetNext = _this$props.propSetNext,\n          handleAnswer = _this$props.handleAnswer,\n          propSelectedAnswer = _this$props.propSelectedAnswer;\n    handleAnswer();\n    await propSelectedAnswer(e.target);\n    await propSetNext();\n  }\n\n  savaPlayerStatus() {\n    const _this$props2 = this.props,\n          name = _this$props2.name,\n          score = _this$props2.score,\n          token = _this$props2.token;\n    let assertions = 0;\n    localStorage.setItem('state', JSON.stringify({\n      player: {\n        name,\n        assertions,\n        score,\n        gravatarEmail: token\n      }\n    }));\n  }\n\n  render() {\n    const _this$props3 = this.props,\n          disabled = _this$props3.disabled,\n          selectedAnswer = _this$props3.selectedAnswer,\n          _this$props3$question = _this$props3.question,\n          correctAnswer = _this$props3$question.correct_answer,\n          incorrectAnswers = _this$props3$question.incorrect_answers,\n          question = _this$props3$question.question,\n          category = _this$props3$question.category;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      \"data-testid\": \"question-category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, category), React.createElement(\"h2\", {\n      \"data-testid\": \"question-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, question), React.createElement(\"button\", {\n      \"data-testid\": \"correct-answer\",\n      type: \"button\",\n      className: selectedAnswer && 'correct',\n      onClick: this.handleClick,\n      disabled: disabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, correctAnswer), incorrectAnswers.map((element, i) => React.createElement(\"button\", {\n      \"data-testid\": `wrong-answer-${i}`,\n      type: \"button\",\n      key: element,\n      className: selectedAnswer && 'incorrect',\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, element)));\n  }\n\n}\n\nQuestion.propTypes = {\n  disabled: PropTypes.bool,\n  handleAnswer: PropTypes.func,\n  question: PropTypes.shape({\n    correct_answer: PropTypes.string,\n    incorrect_answers: PropTypes.arrayOf(PropTypes.string),\n    question: PropTypes.string,\n    category: PropTypes.string\n  })\n}.isRequired;\n\nconst mapStateToProps = ({\n  actionsReducer: {\n    selectedAnswer,\n    name,\n    token,\n    score\n  }\n}) => ({\n  selectedAnswer,\n  name,\n  token,\n  score\n});\n\nconst mapDispatchToProps = dispatch => ({\n  propSetNext: () => dispatch(setNext()),\n  propSelectedAnswer: selectedAnswer => dispatch(setSelectedAnswer(selectedAnswer))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Question);","map":{"version":3,"sources":["/home/santiago/Trybe/myprojects/sd-09-project-trivia-react-redux/src/components/question.js"],"names":["React","connect","PropTypes","setNext","setSelectedAnswer","Question","Component","constructor","props","handleClick","bind","e","propSetNext","handleAnswer","propSelectedAnswer","target","savaPlayerStatus","name","score","token","assertions","localStorage","setItem","JSON","stringify","player","gravatarEmail","render","disabled","selectedAnswer","question","correctAnswer","correct_answer","incorrectAnswers","incorrect_answers","category","map","element","i","propTypes","bool","func","shape","string","arrayOf","isRequired","mapStateToProps","actionsReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { PropTypes } from 'prop-types';\nimport { setNext, setSelectedAnswer } from '../redux/actions';\nimport '../css/questions.css';\n\nclass Question extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  async handleClick(e) {\n    const { propSetNext, handleAnswer, propSelectedAnswer } = this.props;\n    handleAnswer();\n    await propSelectedAnswer(e.target);\n    await propSetNext();\n  }\n\n  savaPlayerStatus() {\n    const { name, score, token } = this.props;\n    let assertions = 0;\n\n    localStorage.setItem('state', JSON.stringify({\n      player: {\n        name,\n        assertions,\n        score,\n        gravatarEmail: token,\n      },\n    }));\n  }\n\n  render() {\n    const {\n      disabled,\n      selectedAnswer,\n      question: {\n        correct_answer: correctAnswer,\n        incorrect_answers: incorrectAnswers,\n        question,\n        category,\n      } } = this.props;\n    return (\n      <div>\n        <h2 data-testid=\"question-category\">{ category }</h2>\n        <h2 data-testid=\"question-text\">{ question }</h2>\n        <button\n          data-testid=\"correct-answer\"\n          type=\"button\"\n          className={ selectedAnswer && 'correct' }\n          onClick={ this.handleClick }\n          disabled={ disabled }\n        >\n          { correctAnswer }\n        </button>\n        {incorrectAnswers.map((element, i) => (\n          <button\n            data-testid={ `wrong-answer-${i}` }\n            type=\"button\"\n            key={ element }\n            className={ selectedAnswer && 'incorrect' }\n            onClick={ this.handleClick }\n          >\n            {element }\n          </button>\n        )) }\n      </div>\n    );\n  }\n}\n\nQuestion.propTypes = {\n  disabled: PropTypes.bool,\n  handleAnswer: PropTypes.func,\n  question: PropTypes.shape({\n    correct_answer: PropTypes.string,\n    incorrect_answers: PropTypes.arrayOf(PropTypes.string),\n    question: PropTypes.string,\n    category: PropTypes.string,\n  }),\n}.isRequired;\n\nconst mapStateToProps = ({ actionsReducer: { selectedAnswer, name, token, score } }) => ({\n  selectedAnswer,\n  name,\n  token,\n  score,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  propSetNext: () => dispatch(setNext()),\n  propSelectedAnswer: (selectedAnswer) => dispatch(setSelectedAnswer(selectedAnswer)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Question);\n"]},"metadata":{},"sourceType":"module"}