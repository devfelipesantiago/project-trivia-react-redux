{"ast":null,"code":"import { opentdbApi, questionsApi } from '../services/Api';\nexport const SET_TOKEN = 'SET_TOKEN';\nexport const SET_NAME_EMAIL = 'SET_NAME_EMAIL';\nexport const SET_GRAVATAR = 'SET_GRAVATAR';\nexport const SET_QUESTIONS = 'SET_QUESTIONS';\nexport const SET_NEXT = 'SET_NEXT';\n\nconst setTokenCode = token => ({\n  type: SET_TOKEN,\n  token\n});\n\nconst setQuestions = results => ({\n  type: SET_QUESTIONS,\n  results\n});\n\nexport const setNext = () => ({\n  type: SET_NEXT\n});\nexport const getToken = () => async dispatch => {\n  const data = await opentdbApi();\n  console.log(data);\n  localStorage.setItem('token', data);\n  dispatch(setTokenCode(data));\n};\nexport const getQuestions = () => async dispatch => {\n  const data = await questionsApi();\n  dispatch(setQuestions(data));\n};\nexport const setNameAndEmail = (name, email) => ({\n  type: SET_NAME_EMAIL,\n  name,\n  email\n});","map":{"version":3,"sources":["/home/santiago/Trybe/myprojects/sd-09-project-trivia-react-redux/src/redux/actions/index.js"],"names":["opentdbApi","questionsApi","SET_TOKEN","SET_NAME_EMAIL","SET_GRAVATAR","SET_QUESTIONS","SET_NEXT","setTokenCode","token","type","setQuestions","results","setNext","getToken","dispatch","data","console","log","localStorage","setItem","getQuestions","setNameAndEmail","name","email"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,YAArB,QAAyC,iBAAzC;AAEA,OAAO,MAAMC,SAAS,GAAG,WAAlB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,QAAQ,GAAG,UAAjB;;AAEP,MAAMC,YAAY,GAAIC,KAAD,KAAY;AAC/BC,EAAAA,IAAI,EAAEP,SADyB;AAE/BM,EAAAA;AAF+B,CAAZ,CAArB;;AAKA,MAAME,YAAY,GAAIC,OAAD,KAAc;AACjCF,EAAAA,IAAI,EAAEJ,aAD2B;AAEjCM,EAAAA;AAFiC,CAAd,CAArB;;AAKA,OAAO,MAAMC,OAAO,GAAG,OAAO;AAC5BH,EAAAA,IAAI,EAAEH;AADsB,CAAP,CAAhB;AAIP,OAAO,MAAMO,QAAQ,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAChD,QAAMC,IAAI,GAAG,MAAMf,UAAU,EAA7B;AACAgB,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAG,EAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BJ,IAA9B;AACAD,EAAAA,QAAQ,CAACP,YAAY,CAACQ,IAAD,CAAb,CAAR;AACD,CALM;AAOP,OAAO,MAAMK,YAAY,GAAG,MAAM,MAAON,QAAP,IAAoB;AACpD,QAAMC,IAAI,GAAG,MAAMd,YAAY,EAA/B;AACAa,EAAAA,QAAQ,CAACJ,YAAY,CAACK,IAAD,CAAb,CAAR;AACD,CAHM;AAKP,OAAO,MAAMM,eAAe,GAAG,CAACC,IAAD,EAAOC,KAAP,MAAkB;AAC/Cd,EAAAA,IAAI,EAAEN,cADyC;AAE/CmB,EAAAA,IAF+C;AAG/CC,EAAAA;AAH+C,CAAlB,CAAxB","sourcesContent":["import { opentdbApi, questionsApi } from '../services/Api';\n\nexport const SET_TOKEN = 'SET_TOKEN';\nexport const SET_NAME_EMAIL = 'SET_NAME_EMAIL';\nexport const SET_GRAVATAR = 'SET_GRAVATAR';\nexport const SET_QUESTIONS = 'SET_QUESTIONS';\nexport const SET_NEXT = 'SET_NEXT';\n\nconst setTokenCode = (token) => ({\n  type: SET_TOKEN,\n  token,\n});\n\nconst setQuestions = (results) => ({\n  type: SET_QUESTIONS,\n  results,\n});\n\nexport const setNext = () => ({\n  type: SET_NEXT,\n});\n\nexport const getToken = () => async (dispatch) => {\n  const data = await opentdbApi();\n  console.log(data);\n  localStorage.setItem('token', data);\n  dispatch(setTokenCode(data));\n};\n\nexport const getQuestions = () => async (dispatch) => {\n  const data = await questionsApi();\n  dispatch(setQuestions(data));\n};\n\nexport const setNameAndEmail = (name, email) => ({\n  type: SET_NAME_EMAIL,\n  name,\n  email,\n});\n"]},"metadata":{},"sourceType":"module"}